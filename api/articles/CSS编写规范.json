{"title":"css编写规范","slug":"CSS编写规范","date":"2019-08-13T11:23:12.000Z","updated":"2022-01-05T09:28:50.185Z","comments":true,"path":"api/articles/CSS编写规范.json","excerpt":null,"covers":null,"content":"<h1 id=\"id和class的命名\"><a href=\"#id和class的命名\" class=\"headerlink\" title=\"id和class的命名\"></a>id和class的命名</h1><p>ID和class的名称总是使用可以反应元素目的和用途的名称，或其他通用的名称，代替表象和晦涩难懂的名称</p>\n<p>不推荐 :</p>\n<pre><code>.fw-800 {\n  font-weight: 800;\n}\n\n.red {\n  color: red;\n}</code></pre>\n<p>推荐 :</p>\n<pre><code>.heavy {\n  font-weight: 800;\n}\n\n.important {\n  color: red;\n}</code></pre>\n<h1 id=\"合理的使用ID\"><a href=\"#合理的使用ID\" class=\"headerlink\" title=\"合理的使用ID\"></a>合理的使用ID</h1><p>一般情况下ID不应该被用于样式，并且ID的权重很高，所以不使用ID解决样式的问题，而是使用class</p>\n<p>不推荐：</p>\n<pre><code>#content .title {\n  font-size: 2em;\n}</code></pre>\n<p>推荐：</p>\n<pre><code>.content .title {\n  font-size: 2em;\n}</code></pre>\n<h1 id=\"css选择器中避免使用标签名\"><a href=\"#css选择器中避免使用标签名\" class=\"headerlink\" title=\"css选择器中避免使用标签名\"></a>css选择器中避免使用标签名</h1><p>从结构、表现、行为分离的原则来看，应该尽量避免css中出现HTML标签，并且在css选择器中出现标签名会存在潜在的问题。</p>\n<h1 id=\"使用子选择器\"><a href=\"#使用子选择器\" class=\"headerlink\" title=\"使用子选择器\"></a>使用子选择器</h1><p>很多前端开发人员写选择器链的时候不使用 直接子选择器（注：直接子选择器和后代选择器的区别）。<br>有时，这可能会导致疼痛的设计问题并且有时候可能会很耗性能。然而，在任何情况下，这是一个非常不好的做法。<br>如果你不写很通用的，需要匹配到DOM末端的选择器， 你应该总是考虑直接子选择器。不推荐:</p>\n<pre><code>.content .title {\n  font-size: 2rem;\n}</code></pre>\n<p>推荐</p>\n<pre><code>.content &gt; .title {\n  font-size: 2rem;\n}</code></pre>\n<h1 id=\"尽量使用缩写属性\"><a href=\"#尽量使用缩写属性\" class=\"headerlink\" title=\"尽量使用缩写属性\"></a>尽量使用缩写属性</h1><p>尽量使用缩写属性对于代码效率和可读性是很有用的，比如font属性。不推荐：</p>\n<pre><code>border-top-style: none;\nfont-family: palatino, georgia, serif;\nfont-size: 100%;\nline-height: 1.6;\npadding-bottom: 2em;\npadding-left: 1em;\npadding-right: 1em;\npadding-top: 0;</code></pre>\n<p>推荐：</p>\n<pre><code>border-top: 0;\nfont: 100%/1.6 palatino, georgia, serif;\npadding: 0 1em 2em;</code></pre>\n<h1 id=\"0后面不带单位\"><a href=\"#0后面不带单位\" class=\"headerlink\" title=\"0后面不带单位\"></a>0后面不带单位</h1><p>省略0后面的单位，</p>\n<p>不推荐：</p>\n<pre><code>padding-bottom: 0px;\nmargin: 0em;</code></pre>\n<p>推荐：</p>\n<pre><code>padding-bottom: 0;\nmargin: 0;</code></pre>\n<h1 id=\"属性格式\"><a href=\"#属性格式\" class=\"headerlink\" title=\"属性格式\"></a>属性格式</h1><ul>\n<li>为了保证一致性和可扩展性，每个声明应该用分号结束，每个声明换行。</li>\n<li>属性名的冒号后使用一个空格。出于一致性的原因，属性和值（但属性和冒号之间没有空格）的之间始终使用一个空格。</li>\n<li>每个选择器和属性声明总是使用新的一行。</li>\n<li>属性选择器或属性值用双引号（””），而不是单引号（”）括起来。</li>\n<li>URL值（url()）不要使用引号。</li>\n</ul>\n<p>作为最佳实践，我们应该遵循以下顺序（应该按照下表的顺序）：<br>结构性属性：</p>\n<ul>\n<li>display</li>\n<li>position, left, top, right etc.</li>\n<li>overflow, float, clear etc.</li>\n<li>margin, padding</li>\n</ul>\n<p>表现性属性：</p>\n<ul>\n<li>background, border etc.</li>\n<li>font, text</li>\n</ul>\n<p>不推荐：</p>\n<pre><code> .box {\n  font-family: 'Arial', sans-serif;\n  border: 3px solid #ddd;\n  left: 30%;\n  position: absolute;\n  text-transform: uppercase;\n  background-color: #eee;\n  right: 30%;\n  isplay: block;\n  font-size: 1.5rem;\n  overflow: hidden;\n  padding: 1em;\n  margin: 1em;\n}</code></pre>\n<p>推荐：</p>\n<pre><code>.box {\n  display: block;\n  position: absolute;\n  left: 30%;\n  right: 30%;\n  overflow: hidden;\n  margin: 1em;\n  padding: 1em;\n  background-color: #eee;\n  border: 3px solid #ddd;\n  font-family: 'Arial', sans-serif;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n}\n</code></pre>\n<h1 id=\"ID-和-Class（类）-名的分隔符\"><a href=\"#ID-和-Class（类）-名的分隔符\" class=\"headerlink\" title=\"ID 和 Class（类） 名的分隔符\"></a>ID 和 Class（类） 名的分隔符</h1><p>使用连字符（中划线）分隔ID和Class（类）名中的单词。为了增强课理解性，在选择器中不要使用除了连字符（中划线）以为的任何字符（包括没有）来连接单词和缩写。</p>\n<p>另外，作为该标准，预设属性选择器能识别连字符（中划线）作为单词[attribute|=value]的分隔符，<br>所以最好的坚持使用连字符作为分隔符。</p>\n<p>不推荐</p>\n<pre><code>.demoimage {}\n.error_status {}</code></pre>\n<p>推荐</p>\n<pre><code>#video-id {}\n.ads-sample {}</code></pre>\n","more":"<h1 id=\"id和class的命名\"><a href=\"#id和class的命名\" class=\"headerlink\" title=\"id和class的命名\"></a>id和class的命名</h1><p>ID和class的名称总是使用可以反应元素目的和用途的名称，或其他通用的名称，代替表象和晦涩难懂的名称</p>\n<p>不推荐 :</p>\n<pre><code>.fw-800 &#123;\n  font-weight: 800;\n&#125;\n\n.red &#123;\n  color: red;\n&#125;</code></pre>\n<p>推荐 :</p>\n<pre><code>.heavy &#123;\n  font-weight: 800;\n&#125;\n\n.important &#123;\n  color: red;\n&#125;</code></pre>\n<h1 id=\"合理的使用ID\"><a href=\"#合理的使用ID\" class=\"headerlink\" title=\"合理的使用ID\"></a>合理的使用ID</h1><p>一般情况下ID不应该被用于样式，并且ID的权重很高，所以不使用ID解决样式的问题，而是使用class</p>\n<p>不推荐：</p>\n<pre><code>#content .title &#123;\n  font-size: 2em;\n&#125;</code></pre>\n<p>推荐：</p>\n<pre><code>.content .title &#123;\n  font-size: 2em;\n&#125;</code></pre>\n<h1 id=\"css选择器中避免使用标签名\"><a href=\"#css选择器中避免使用标签名\" class=\"headerlink\" title=\"css选择器中避免使用标签名\"></a>css选择器中避免使用标签名</h1><p>从结构、表现、行为分离的原则来看，应该尽量避免css中出现HTML标签，并且在css选择器中出现标签名会存在潜在的问题。</p>\n<h1 id=\"使用子选择器\"><a href=\"#使用子选择器\" class=\"headerlink\" title=\"使用子选择器\"></a>使用子选择器</h1><p>很多前端开发人员写选择器链的时候不使用 直接子选择器（注：直接子选择器和后代选择器的区别）。<br>有时，这可能会导致疼痛的设计问题并且有时候可能会很耗性能。然而，在任何情况下，这是一个非常不好的做法。<br>如果你不写很通用的，需要匹配到DOM末端的选择器， 你应该总是考虑直接子选择器。不推荐:</p>\n<pre><code>.content .title &#123;\n  font-size: 2rem;\n&#125;</code></pre>\n<p>推荐</p>\n<pre><code>.content &gt; .title &#123;\n  font-size: 2rem;\n&#125;</code></pre>\n<h1 id=\"尽量使用缩写属性\"><a href=\"#尽量使用缩写属性\" class=\"headerlink\" title=\"尽量使用缩写属性\"></a>尽量使用缩写属性</h1><p>尽量使用缩写属性对于代码效率和可读性是很有用的，比如font属性。不推荐：</p>\n<pre><code>border-top-style: none;\nfont-family: palatino, georgia, serif;\nfont-size: 100%;\nline-height: 1.6;\npadding-bottom: 2em;\npadding-left: 1em;\npadding-right: 1em;\npadding-top: 0;</code></pre>\n<p>推荐：</p>\n<pre><code>border-top: 0;\nfont: 100%/1.6 palatino, georgia, serif;\npadding: 0 1em 2em;</code></pre>\n<h1 id=\"0后面不带单位\"><a href=\"#0后面不带单位\" class=\"headerlink\" title=\"0后面不带单位\"></a>0后面不带单位</h1><p>省略0后面的单位，</p>\n<p>不推荐：</p>\n<pre><code>padding-bottom: 0px;\nmargin: 0em;</code></pre>\n<p>推荐：</p>\n<pre><code>padding-bottom: 0;\nmargin: 0;</code></pre>\n<h1 id=\"属性格式\"><a href=\"#属性格式\" class=\"headerlink\" title=\"属性格式\"></a>属性格式</h1><ul>\n<li>为了保证一致性和可扩展性，每个声明应该用分号结束，每个声明换行。</li>\n<li>属性名的冒号后使用一个空格。出于一致性的原因，属性和值（但属性和冒号之间没有空格）的之间始终使用一个空格。</li>\n<li>每个选择器和属性声明总是使用新的一行。</li>\n<li>属性选择器或属性值用双引号（””），而不是单引号（”）括起来。</li>\n<li>URL值（url()）不要使用引号。</li>\n</ul>\n<p>作为最佳实践，我们应该遵循以下顺序（应该按照下表的顺序）：<br>结构性属性：</p>\n<ul>\n<li>display</li>\n<li>position, left, top, right etc.</li>\n<li>overflow, float, clear etc.</li>\n<li>margin, padding</li>\n</ul>\n<p>表现性属性：</p>\n<ul>\n<li>background, border etc.</li>\n<li>font, text</li>\n</ul>\n<p>不推荐：</p>\n<pre><code> .box &#123;\n  font-family: &#39;Arial&#39;, sans-serif;\n  border: 3px solid #ddd;\n  left: 30%;\n  position: absolute;\n  text-transform: uppercase;\n  background-color: #eee;\n  right: 30%;\n  isplay: block;\n  font-size: 1.5rem;\n  overflow: hidden;\n  padding: 1em;\n  margin: 1em;\n&#125;</code></pre>\n<p>推荐：</p>\n<pre><code>.box &#123;\n  display: block;\n  position: absolute;\n  left: 30%;\n  right: 30%;\n  overflow: hidden;\n  margin: 1em;\n  padding: 1em;\n  background-color: #eee;\n  border: 3px solid #ddd;\n  font-family: &#39;Arial&#39;, sans-serif;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n&#125;\n</code></pre>\n<h1 id=\"ID-和-Class（类）-名的分隔符\"><a href=\"#ID-和-Class（类）-名的分隔符\" class=\"headerlink\" title=\"ID 和 Class（类） 名的分隔符\"></a>ID 和 Class（类） 名的分隔符</h1><p>使用连字符（中划线）分隔ID和Class（类）名中的单词。为了增强课理解性，在选择器中不要使用除了连字符（中划线）以为的任何字符（包括没有）来连接单词和缩写。</p>\n<p>另外，作为该标准，预设属性选择器能识别连字符（中划线）作为单词[attribute|=value]的分隔符，<br>所以最好的坚持使用连字符作为分隔符。</p>\n<p>不推荐</p>\n<pre><code>.demoimage &#123;&#125;\n.error_status &#123;&#125;</code></pre>\n<p>推荐</p>\n<pre><code>#video-id &#123;&#125;\n.ads-sample &#123;&#125;</code></pre>\n","categories":[{"name":"前端基础","path":"api/categories/前端基础.json"}],"tags":[{"name":"css","path":"api/tags/css.json"},{"name":"前端规范","path":"api/tags/前端规范.json"}]}