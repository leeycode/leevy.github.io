{"title":"webpack基础05-多页面打包的方案","slug":"webpack基础05-多页面打包","date":"2021-01-07T03:14:15.000Z","updated":"2022-01-05T09:30:26.987Z","comments":true,"path":"api/articles/webpack基础05-多页面打包.json","excerpt":null,"covers":null,"content":"<h1 id=\"多页面（MPA）应用打包方案\"><a href=\"#多页面（MPA）应用打包方案\" class=\"headerlink\" title=\"多页面（MPA）应用打包方案\"></a>多页面（MPA）应用打包方案</h1><blockquote>\n<p>每次页面跳转，服务器都会返回一个新的html文档，这中类型的网站就叫多页面应用。</p>\n</blockquote>\n<h2 id=\"多页面应用方案\"><a href=\"#多页面应用方案\" class=\"headerlink\" title=\"多页面应用方案\"></a>多页面应用方案</h2><p>在webpack里，每个页面对应一个 entry，一个html-webpack-plugin。<br>缺点：每次新增或删除页面都需要修改 webpack 配置。</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        index<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n        search<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/search.js'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<ol>\n<li><p>解决方案1：动态获取 entry 和设置 html-webpack-plugin 数量</p>\n</li>\n<li><p>解决方案2：利用 glob.sync</p>\n</li>\n</ol>\n<p>glob库</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">\nentry<span class=\"token punctuation\">:</span> glob<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/*/index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>这两个解决方案的前提是把入口文件放到 /src/*/index.js 下，所以的入口文件都叫index.js，通过二级目录来区分。</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        index<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index/index.js'</span><span class=\"token punctuation\">,</span>\n        search<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/search/index.js'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>如果使用glob库的话，</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> setMPA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> entry <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> htmlWebpackPlugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> entryFiles <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/*/index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>entryFiles<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> entryFile <span class=\"token operator\">=</span> entryFiles<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\" spellcheck=\"true\">// '/Users/cpselvis/my-project/src/index/index.js'</span>\n\n            <span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> entryFile<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/src\\/(.*)\\/index\\.js/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> pageName <span class=\"token operator\">=</span> match <span class=\"token operator\">&amp;&amp;</span> match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            entry<span class=\"token punctuation\">[</span>pageName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> entryFile<span class=\"token punctuation\">;</span>\n            htmlWebpackPlugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                    inlineSource<span class=\"token punctuation\">:</span> <span class=\"token string\">'.css$'</span><span class=\"token punctuation\">,</span>\n                    template<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`src/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/index.html`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    filename<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pageName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.html`</span></span><span class=\"token punctuation\">,</span>\n                    chunks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'vendors'</span><span class=\"token punctuation\">,</span> pageName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    inject<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                    minify<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        html5<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        collapseWhitespace<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        preserveLineBreaks<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                        minifyCSS<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        minifyJS<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        removeComments<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        entry<span class=\"token punctuation\">,</span>\n        htmlWebpackPlugins\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>entry <span class=\"token punctuation\">,</span>htmlWebpackPlugins<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">setMPA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token keyword\">export</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n     entry<span class=\"token punctuation\">:</span> entry<span class=\"token punctuation\">,</span>\n     plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>htmlWebpackPlugins<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n","more":"<h1 id=\"多页面（MPA）应用打包方案\"><a href=\"#多页面（MPA）应用打包方案\" class=\"headerlink\" title=\"多页面（MPA）应用打包方案\"></a>多页面（MPA）应用打包方案</h1><blockquote>\n<p>每次页面跳转，服务器都会返回一个新的html文档，这中类型的网站就叫多页面应用。</p>\n</blockquote>\n<h2 id=\"多页面应用方案\"><a href=\"#多页面应用方案\" class=\"headerlink\" title=\"多页面应用方案\"></a>多页面应用方案</h2><p>在webpack里，每个页面对应一个 entry，一个html-webpack-plugin。<br>缺点：每次新增或删除页面都需要修改 webpack 配置。</p>\n<pre><code class=\"javascript\">module.exports = &#123;\n    entry: &#123;\n        index: &#39;./src/index.js&#39;,\n        search: &#39;./src/search.js&#39;\n    &#125;\n&#125;;</code></pre>\n<ol>\n<li><p>解决方案1：动态获取 entry 和设置 html-webpack-plugin 数量</p>\n</li>\n<li><p>解决方案2：利用 glob.sync</p>\n</li>\n</ol>\n<p>glob库</p>\n<pre><code class=\"javascript\">\nentry: glob.sync(path.join(__dirname, &#39;./src/*/index.js&#39;))</code></pre>\n<p>这两个解决方案的前提是把入口文件放到 /src/*/index.js 下，所以的入口文件都叫index.js，通过二级目录来区分。</p>\n<pre><code class=\"javascript\">module.exports = &#123;\n    entry: &#123;\n        index: &#39;./src/index/index.js&#39;,\n        search: &#39;./src/search/index.js&#39;\n    &#125;\n&#125;;</code></pre>\n<p>如果使用glob库的话，</p>\n<pre><code class=\"javascript\">const setMPA = () =&gt; &#123;\n    const entry = &#123;&#125;;\n    const htmlWebpackPlugins = [];\n    const entryFiles = glob.sync(path.join(__dirname, &#39;./src/*/index.js&#39;));\n\n    Object.keys(entryFiles)\n        .map((index) =&gt; &#123;\n            const entryFile = entryFiles[index];\n            // &#39;/Users/cpselvis/my-project/src/index/index.js&#39;\n\n            const match = entryFile.match(/src\\/(.*)\\/index\\.js/);\n            const pageName = match &amp;&amp; match[1];\n\n            entry[pageName] = entryFile;\n            htmlWebpackPlugins.push(\n                new HtmlWebpackPlugin(&#123;\n                    inlineSource: &#39;.css$&#39;,\n                    template: path.join(__dirname, `src/$&#123;pageName&#125;/index.html`),\n                    filename: `$&#123;pageName&#125;.html`,\n                    chunks: [&#39;vendors&#39;, pageName],\n                    inject: true,\n                    minify: &#123;\n                        html5: true,\n                        collapseWhitespace: true,\n                        preserveLineBreaks: false,\n                        minifyCSS: true,\n                        minifyJS: true,\n                        removeComments: false\n                    &#125;\n                &#125;)\n            );\n        &#125;);\n\n    return &#123;\n        entry,\n        htmlWebpackPlugins\n    &#125;\n&#125;\n\nconst &#123;entry ,htmlWebpackPlugins&#125; = setMPA();\n\nmodule.export = &#123;\n     entry: entry,\n     plugins: [\n        new CleanWebpackPlugin()\n        ].concat(htmlWebpackPlugins)\n    &#125;\n\n</code></pre>\n","categories":[{"name":"webpack专区","path":"api/categories/webpack专区.json"}],"tags":[{"name":"webpack","path":"api/tags/webpack.json"}]}