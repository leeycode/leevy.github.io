{"title":"webpack基础07-treeshaking的使用和基本原理","slug":"webpack基础07-treeshaking的使用和基本原理","date":"2023-06-17T03:14:15.000Z","updated":"2023-07-08T03:12:44.358Z","comments":true,"path":"api/articles/webpack基础07-treeshaking的使用和基本原理.json","excerpt":null,"covers":null,"content":"<h2 id=\"tree-shaking-（摇树优化）\"><a href=\"#tree-shaking-（摇树优化）\" class=\"headerlink\" title=\"tree-shaking （摇树优化）\"></a>tree-shaking （摇树优化）</h2><blockquote>\n<p>概念：1个模块可能有多个方法，只要其中的某个方法使用到了，则整个文件都会被打包到bundle 里面去，tree shaking 就是只把只用到的方法打入bundle，没用到的方法会在 ugligy 阶段被擦除掉</p>\n</blockquote>\n<p>使用：webpack 默认支持，在 .babelrc 里设置 modules:false 即可，mode=production 的情况下默认开启</p>\n<p>要求：必须是 ES6 的语法，CJS（common js） 的方式不支持</p>\n<p>DCE(Dead code elimination)原理 - tree-shaking 用到了DCE原理</p>\n<ul>\n<li>代码不会被执行，不可到达</li>\n<li>代码执行的结果不会被用到</li>\n<li>代码只会影响死变量（只写不读）</li>\n</ul>\n<pre class=\" language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这段代码永远不会被执行\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"Tree-shaking-原理\"><a href=\"#Tree-shaking-原理\" class=\"headerlink\" title=\"Tree-shaking 原理\"></a>Tree-shaking 原理</h3><p>利用 ES6 模块的特点</p>\n<ul>\n<li>只能作为模块的顶层语句出现</li>\n<li>import 的模块名只能是字符串常量</li>\n<li>import binding 是 immutable<br>代码擦除：tree-shaking会对无用代码作比较，然后在 uglify 阶段删除无用代码。</li>\n</ul>\n","more":"<h2 id=\"tree-shaking-（摇树优化）\"><a href=\"#tree-shaking-（摇树优化）\" class=\"headerlink\" title=\"tree-shaking （摇树优化）\"></a>tree-shaking （摇树优化）</h2><blockquote>\n<p>概念：1个模块可能有多个方法，只要其中的某个方法使用到了，则整个文件都会被打包到bundle 里面去，tree shaking 就是只把只用到的方法打入bundle，没用到的方法会在 ugligy 阶段被擦除掉</p>\n</blockquote>\n<p>使用：webpack 默认支持，在 .babelrc 里设置 modules:false 即可，mode=production 的情况下默认开启</p>\n<p>要求：必须是 ES6 的语法，CJS（common js） 的方式不支持</p>\n<p>DCE(Dead code elimination)原理 - tree-shaking 用到了DCE原理</p>\n<ul>\n<li>代码不会被执行，不可到达</li>\n<li>代码执行的结果不会被用到</li>\n<li>代码只会影响死变量（只写不读）</li>\n</ul>\n<pre><code class=\"js\">if (false) &#123;\n   console.log(&quot;这段代码永远不会被执行&quot;)\n&#125;</code></pre>\n<h3 id=\"Tree-shaking-原理\"><a href=\"#Tree-shaking-原理\" class=\"headerlink\" title=\"Tree-shaking 原理\"></a>Tree-shaking 原理</h3><p>利用 ES6 模块的特点</p>\n<ul>\n<li>只能作为模块的顶层语句出现</li>\n<li>import 的模块名只能是字符串常量</li>\n<li>import binding 是 immutable<br>代码擦除：tree-shaking会对无用代码作比较，然后在 uglify 阶段删除无用代码。</li>\n</ul>\n","categories":[{"name":"webpack专区","path":"api/categories/webpack专区.json"}],"tags":[{"name":"webpack","path":"api/tags/webpack.json"}]}